"""
prompts.py
Module for prompt templates for documentation generation.
"""

README_PROMPT = """
You are a technical writer. Write a comprehensive README for the following project.

Project Name: {project_name}
Description: {project_description}
Main Features:
{features_list}

Codebase Structure:
{code_structure}

Usage Instructions:
{usage_examples}

Include installation steps, usage examples, and any other relevant information.
"""

API_DOCS_PROMPT = """
You are a technical writer. Write API documentation for the following codebase.

API Endpoints:
{api_endpoints}

Descriptions:
{descriptions}

Include request/response examples and authentication details if available.
"""

def fill_readme_prompt(processed_data, project_name="Project", project_description="A codebase."):
    """
    Fill the README_PROMPT template with data from the processed codebase.
    processed_data: output from process_codebase
    project_name: optional project name
    project_description: optional description
    Returns the filled prompt string.
    """
    # Features: list file types/languages and number of functions/classes as a simple feature list
    features = set()
    for file in processed_data:
        lang = file['file_metadata']['language']
        features.add(lang)
    features_list = '\n'.join(f"- {f}" for f in sorted(features) if f != 'Unknown')

    # Codebase structure: list files and their chunks
    structure_lines = []
    for file in processed_data:
        meta = file['file_metadata']
        structure_lines.append(f"* {meta['file_name']} ({meta['language']})")
        for chunk in file['chunks']:
            if chunk['type'] in ('def', 'class') and chunk['name']:
                structure_lines.append(f"    - {chunk['type']} {chunk['name']} (lines {chunk['start_line']}-{chunk['end_line']})")
    code_structure = '\n'.join(structure_lines)

    # Usage examples: placeholder for now
    usage_examples = "To be filled in by the user or generated by the LLM."

    return README_PROMPT.format(
        project_name=project_name,
        project_description=project_description,
        features_list=features_list or "- Various languages",
        code_structure=code_structure,
        usage_examples=usage_examples
    ) 